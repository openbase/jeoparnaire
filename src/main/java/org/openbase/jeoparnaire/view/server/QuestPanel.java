package org.openbase.jeoparnaire.view.server;

/*-
 * #%L
 * Jeoparnaire
 * %%
 * Copyright (C) 2011 - 2017 openbase.org
 * %%
 * This program is free software: you can redistribute it and/or modify
 * it under the terms of the GNU General Public License as
 * published by the Free Software Foundation, either version 3 of the
 * License, or (at your option) any later version.
 * 
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU General Public License for more details.
 * 
 * You should have received a copy of the GNU General Public
 * License along with this program.  If not, see
 * <http://www.gnu.org/licenses/gpl-3.0.html>.
 * #L%
 */

import org.openbase.jeoparnaire.data.Quest;
import java.beans.PropertyChangeEvent;
import java.beans.PropertyChangeListener;

/**
 *
 * @author <a href="mailto:divine@openbase.org">Divine Threepwood</a>
 */
public class QuestPanel extends javax.swing.JPanel implements PropertyChangeListener {
	
	private CategoryDisplayPanel categoryDisplayPanel;
	private Quest quest;
	
	/**
	 * Creates new form ButtonPanel
	 */
	public QuestPanel() {
		initComponents();
		initDynamicComponents();
	}
	
	/**
	 * Creates new form ButtonPanel
	 */
	public QuestPanel(Quest quest, CategoryDisplayPanel categoryDisplayPanel) {
		this.categoryDisplayPanel = categoryDisplayPanel;
		this.quest = quest;
		this.initComponents();
		this.initDynamicComponents();
		this.jButton1.setText(Integer.toString(quest.getPoints()));
		this.quest.addPropertyChangeListener(this);
	}

	/**
	 * This method is called from within the constructor to initialize the form.
	 * WARNING: Do NOT modify this code. The content of this method is always
	 * regenerated by the Form Editor.
	 */
	@SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jButton1 = new javax.swing.JButton();

        setBackground(new java.awt.Color(40, 3, 123));
        setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0), 2));
        setFocusable(false);

        jButton1.setBackground(new java.awt.Color(22, 1, 152));
        jButton1.setFont(new java.awt.Font("DejaVu Sans Condensed", 1, 24)); // NOI18N
        jButton1.setForeground(new java.awt.Color(255, 209, 0));
        jButton1.setText("100P");
        jButton1.setBorderPainted(false);
        jButton1.setContentAreaFilled(false);
        jButton1.setDefaultCapable(false);
        jButton1.setFocusPainted(false);
        jButton1.setFocusable(false);
        jButton1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                jButton1MouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                jButton1MouseExited(evt);
            }
        });
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jButton1, javax.swing.GroupLayout.DEFAULT_SIZE, 219, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jButton1, javax.swing.GroupLayout.DEFAULT_SIZE, 208, Short.MAX_VALUE)
        );
    }// </editor-fold>//GEN-END:initComponents

	private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
		if(quest.isSolved()) {
			return;
		}
		categoryDisplayPanel.selectButton(this);
	}//GEN-LAST:event_jButton1ActionPerformed

	private void jButton1MouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jButton1MouseEntered
		
	}//GEN-LAST:event_jButton1MouseEntered

	private void jButton1MouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jButton1MouseExited
		
	}//GEN-LAST:event_jButton1MouseExited

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton1;
    // End of variables declaration//GEN-END:variables

	private void initDynamicComponents() {
		jButton1.setForeground(GameColors.FONT);
		setBackground(GameColors.BLUE);
		setBorder(javax.swing.BorderFactory.createLineBorder(GameColors.BLACK, 8));
	}

	public void setSelect(boolean enable) {
		if(enable) {
			if(isEnabled())setBorder(javax.swing.BorderFactory.createLineBorder(GameColors.WHITE, 8));
		} else {
			setBorder(javax.swing.BorderFactory.createLineBorder(GameColors.BLACK, 8));
		}
	}
	
	private void setSolve() {		
		jButton1.setEnabled(false);
		setBackground(GameColors.BLUE_GREY);
		jButton1.setForeground(GameColors.FONT_DIABLED);
	}

	public Quest getQuest() {
		return quest;
	}

	@Override
	public void propertyChange(PropertyChangeEvent evt) {
		if(evt.getPropertyName().equals(Quest.QUEST_SOLVED)) {
			setSolve();
			categoryDisplayPanel.selectButton(null);
		} else if(evt.getPropertyName().equals(Quest.QUEST_ACTIVE)) {
			setBorder(javax.swing.BorderFactory.createLineBorder(GameColors.ORANGE, 8));
		}
	}
}
